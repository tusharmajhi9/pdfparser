[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "smart_pdf_parser"
version = "1.0.0"
description = "A package for extracting structured content from PDF files"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
authors = [
    {name = "Smart PDF Parser Team", email = "info@smartpdfparser.example.com"}
]
keywords = ["pdf", "parser", "extraction", "document", "structure"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Text Processing :: Markup",
    "Topic :: Office/Business",
]
dependencies = [
    "PyMuPDF>=1.19.0,<2.0.0",
    "pydantic>=1.8.0,<2.0.0",
    "numpy>=1.20.0,<2.0.0",
]

[project.urls]
Homepage = "https://github.com/example/smart_pdf_parser"
Repository = "https://github.com/example/smart_pdf_parser.git"
Documentation = "https://github.com/example/smart_pdf_parser/wiki"
"Bug Tracker" = "https://github.com/example/smart_pdf_parser/issues"

[project.scripts]
smart-pdf-parser = "smart_pdf_parser.cli:main"

[tool.setuptools]
packages = ["smart_pdf_parser"]

[tool.black]
line-length = 100
target-version = ["py37", "py38", "py39", "py310"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"